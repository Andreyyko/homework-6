public class Main {
    public static void main(String[] args) {

        System.out.println("Queue Task: \n");
        QueueTask<Integer> queueTask = new QueueTask<>();
        System.out.println("Is the queue empty now?   -->  " + queueTask.isEmpty());
        System.out.println("Queue size:" + queueTask.size());
        System.out.println("Lets add elements to the queue");
        queueTask.enqueue(14);
        queueTask.enqueue(65);
        queueTask.enqueue(1123);
        queueTask.enqueue(512);
        queueTask.enqueue(34);
        queueTask.enqueue(14);
        queueTask.enqueue(125);
        System.out.println();
        System.out.println("Queue after change: " + queueTask);
        System.out.println("Is the queue empty now?   -->  " + queueTask.isEmpty());
        System.out.println("Queue size now: " + queueTask.size());
        System.out.println();
        System.out.println("Remove element from the queue");
        queueTask.dequeue();
        System.out.println("Queue after removing");
        System.out.println(queueTask);
        System.out.println("Queue size now: " + queueTask.size() + "\n");

        System.out.println("\nStack Task: \n");
        StackTask<Integer> stackTask = new StackTask<>();
        System.out.println("Is the stack empty now?   -->  " + stackTask.isEmpty());
        System.out.println("Stack size:" + stackTask.size());
        System.out.println("Lets add elements to the stack");
        stackTask.push(3);
        stackTask.push(35);
        stackTask.push(32);
        stackTask.push(895);
        stackTask.push(335);
        stackTask.push(15);
        System.out.println();
        System.out.println("Stack after change: ");
        stackTask.output();
        System.out.println("Is the Stack empty now?   -->  " + stackTask.isEmpty());
        System.out.println("Stack size now: " + stackTask.size());
        System.out.println();
        System.out.println("Remove element from the stack");
        stackTask.pop();
        System.out.println("Stack after removing");
        stackTask.output();
        System.out.println("Stack size now: " + stackTask.size() + "\n");

        System.out.println("\nDLL Task: \n");
        DLL<Integer> dllTask = new DLL<>();
        System.out.println("Is the DLL empty now?   -->  " + dllTask.isEmpty());
        System.out.println("DLL size:" + dllTask.size());
        System.out.println("Lets add elements to the DLL(addFirst)");
        dllTask.addFirst(4);
        dllTask.addFirst(5);
        dllTask.addFirst(23);
        dllTask.addFirst(45);
        System.out.println();
        System.out.println("DLL after change (output from Head and from Tail) : ");
        dllTask.outputFromHead();
        dllTask.outputFromTail();
        System.out.println("Is the DLL empty now?   -->  " + dllTask.isEmpty());
        System.out.println("DLL size now: " + dllTask.size());
        System.out.println();
        System.out.println("Lets add elements to the DLL(addLast)");
        dllTask.addLast(9);
        dllTask.addLast(98);
        dllTask.addLast(123);
        dllTask.addLast(915);
        dllTask.addLast(51);
        dllTask.addLast(1);
        System.out.println();
        System.out.println("DLL after change (output from Head and from Tail) : ");
        dllTask.outputFromHead();
        dllTask.outputFromTail();
        System.out.println("Is the DLL empty now?   -->  " + dllTask.isEmpty());
        System.out.println("DLL size now: " + dllTask.size());
        System.out.println();
        System.out.println("Lets add elements to the DLL(add(index))");
        dllTask.add(4,1);
        dllTask.add(5,5);
        dllTask.add(1,3);
        dllTask.add(9,2);
        System.out.println();
        System.out.println("DLL after change (output from Head and from Tail) : ");
        dllTask.outputFromHead();
        dllTask.outputFromTail();
        System.out.println("Is the DLL empty now?   -->  " + dllTask.isEmpty());
        System.out.println("DLL size now: " + dllTask.size());
    }
}
